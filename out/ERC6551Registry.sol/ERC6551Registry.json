{"abi":[{"type":"function","name":"account","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"chainId","type":"uint256","internalType":"uint256"},{"name":"tokenContract","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"createAccount","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"chainId","type":"uint256","internalType":"uint256"},{"name":"tokenContract","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"event","name":"ERC6551AccountCreated","inputs":[{"name":"account","type":"address","indexed":false,"internalType":"address"},{"name":"implementation","type":"address","indexed":true,"internalType":"address"},{"name":"salt","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"chainId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"tokenContract","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"AccountCreationFailed","inputs":[]}],"bytecode":{"object":"0x6080604052348015600f57600080fd5b5061023b8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063246a00211461003b5780638a54c52f1461006a575b600080fd5b61004e6100493660046101b7565b61007d565b6040516001600160a01b03909116815260200160405180910390f35b61004e6100783660046101b7565b6100e1565b600060806024608c376e5af43d82803e903d91602b57fd5bf3606c5285605d52733d60ad80600a3d3981f3363d3d373d3d3d363d7360495260ff60005360b76055206035523060601b60015284601552605560002060601b60601c60005260206000f35b600060806024608c376e5af43d82803e903d91602b57fd5bf3606c5285605d52733d60ad80600a3d3981f3363d3d373d3d3d363d7360495260ff60005360b76055206035523060601b600152846015526055600020803b61018b578560b760556000f580610157576320188a596000526004601cfd5b80606c52508284887f79f19b3655ee38b1ce526556b7731a20c8f218fbda4a3990b6cc4172fdf887226060606ca46020606cf35b8060601b60601c60005260206000f35b80356001600160a01b03811681146101b257600080fd5b919050565b600080600080600060a086880312156101cf57600080fd5b6101d88661019b565b945060208601359350604086013592506101f46060870161019b565b94979396509194608001359291505056fea264697066735822122063da2d3b0b91629580004865e47fe1d5589563f5edce6072577f0df253b77dfa64736f6c634300081a0033","sourceMap":"1470:4297:43:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063246a00211461003b5780638a54c52f1461006a575b600080fd5b61004e6100493660046101b7565b61007d565b6040516001600160a01b03909116815260200160405180910390f35b61004e6100783660046101b7565b6100e1565b600060806024608c376e5af43d82803e903d91602b57fd5bf3606c5285605d52733d60ad80600a3d3981f3363d3d373d3d3d363d7360495260ff60005360b76055206035523060601b60015284601552605560002060601b60601c60005260206000f35b600060806024608c376e5af43d82803e903d91602b57fd5bf3606c5285605d52733d60ad80600a3d3981f3363d3d373d3d3d363d7360495260ff60005360b76055206035523060601b600152846015526055600020803b61018b578560b760556000f580610157576320188a596000526004601cfd5b80606c52508284887f79f19b3655ee38b1ce526556b7731a20c8f218fbda4a3990b6cc4172fdf887226060606ca46020606cf35b8060601b60601c60005260206000f35b80356001600160a01b03811681146101b257600080fd5b919050565b600080600080600060a086880312156101cf57600080fd5b6101d88661019b565b945060208601359350604086013592506101f46060870161019b565b94979396509194608001359291505056fea264697066735822122063da2d3b0b91629580004865e47fe1d5589563f5edce6072577f0df253b77dfa64736f6c634300081a0033","sourceMap":"1470:4297:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4558:1207;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;925:32:49;;;907:51;;895:2;880:18;4558:1207:43;;;;;;;1521:3031;;;;;;:::i;:::-;;:::i;4558:1207::-;4739:7;4991:4;4985;4979;4966:30;5063:32;5057:4;5050:46;5141:14;5135:4;5128:28;5200:42;5194:4;5187:56;5359:4;5353;5345:19;5414:4;5408;5398:21;5392:4;5385:35;5477:9;5473:2;5469:18;5463:4;5456:32;5534:4;5528;5521:18;5662:4;5656;5646:21;5642:2;5638:30;5634:2;5630:39;5624:4;5617:53;5744:4;5738;5731:18;1521:3031;1703:7;2672:4;2666;2660;2647:30;2744:32;2738:4;2731:46;2822:14;2816:4;2809:28;2881:42;2875:4;2868:56;3040:4;3034;3026:19;3095:4;3089;3079:21;3073:4;3066:35;3158:9;3154:2;3150:18;3144:4;3137:32;3215:4;3209;3202:18;3313:4;3307;3297:21;3410:8;3398:21;3388:1001;;3521:4;3515;3509;3506:1;3498:28;3604:8;3594:152;;3649:10;3643:4;3636:24;3723:4;3717;3710:18;3594:152;3852:8;3846:4;3839:22;;4268:7;4233:13;4197:14;4109:66;3987:4;3961;3935:358;4370:4;4364;4357:18;3388:1001;4494:8;4490:2;4486:17;4482:2;4478:26;4472:4;4465:40;4531:4;4525;4518:18;14:173:49;82:20;;-1:-1:-1;;;;;131:31:49;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:564::-;287:6;295;303;311;319;372:3;360:9;351:7;347:23;343:33;340:53;;;389:1;386;379:12;340:53;412:29;431:9;412:29;:::i;:::-;402:39;-1:-1:-1;488:2:49;473:18;;460:32;;-1:-1:-1;561:2:49;546:18;;533:32;;-1:-1:-1;608:38:49;642:2;627:18;;608:38;:::i;:::-;192:564;;;;-1:-1:-1;192:564:49;;719:3;704:19;691:33;;192:564;-1:-1:-1;;192:564:49:o","linkReferences":{}},"methodIdentifiers":{"account(address,bytes32,uint256,address,uint256)":"246a0021","createAccount(address,bytes32,uint256,address,uint256)":"8a54c52f"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccountCreationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC6551AccountCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"account\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccountCreationFailed()\":[{\"details\":\"The registry MUST revert with AccountCreationFailed error if the create2 operation fails.\"}]},\"events\":{\"ERC6551AccountCreated(address,address,bytes32,uint256,address,uint256)\":{\"details\":\"The registry MUST emit the ERC6551AccountCreated event upon successful account creation.\"}},\"kind\":\"dev\",\"methods\":{\"account(address,bytes32,uint256,address,uint256)\":{\"details\":\"Returns the computed token bound account address for a non-fungible token.\",\"returns\":{\"_0\":\"The address of the token bound account\"}},\"createAccount(address,bytes32,uint256,address,uint256)\":{\"details\":\"Creates a token bound account for a non-fungible token. If account has already been created, returns the account address without calling create2. Emits ERC6551AccountCreated event.\",\"returns\":{\"_0\":\"The address of the token bound account\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/reference/src/ERC6551Registry.sol\":\"ERC6551Registry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/reference/lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":reference/=lib/reference/\"]},\"sources\":{\"lib/reference/src/ERC6551Registry.sol\":{\"keccak256\":\"0xcafbe4173dc2060d5047691706937d4175a80d4ebe8421d9fcaea1688b9a0756\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47c2e9166915ee29f42241ea084ea1c31575bdf887190180a1fb9af3bab442ed\",\"dweb:/ipfs/QmNSC3TaHkBy5CyFV5sm1eVcPuPwybuvwTGf69jY4PfF6m\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"AccountCreationFailed"},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":false},{"internalType":"address","name":"implementation","type":"address","indexed":true},{"internalType":"bytes32","name":"salt","type":"bytes32","indexed":false},{"internalType":"uint256","name":"chainId","type":"uint256","indexed":false},{"internalType":"address","name":"tokenContract","type":"address","indexed":true},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true}],"type":"event","name":"ERC6551AccountCreated","anonymous":false},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"account","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createAccount","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"account(address,bytes32,uint256,address,uint256)":{"details":"Returns the computed token bound account address for a non-fungible token.","returns":{"_0":"The address of the token bound account"}},"createAccount(address,bytes32,uint256,address,uint256)":{"details":"Creates a token bound account for a non-fungible token. If account has already been created, returns the account address without calling create2. Emits ERC6551AccountCreated event.","returns":{"_0":"The address of the token bound account"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/reference/lib/openzeppelin-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","reference/=lib/reference/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/reference/src/ERC6551Registry.sol":"ERC6551Registry"},"evmVersion":"paris","libraries":{}},"sources":{"lib/reference/src/ERC6551Registry.sol":{"keccak256":"0xcafbe4173dc2060d5047691706937d4175a80d4ebe8421d9fcaea1688b9a0756","urls":["bzz-raw://47c2e9166915ee29f42241ea084ea1c31575bdf887190180a1fb9af3bab442ed","dweb:/ipfs/QmNSC3TaHkBy5CyFV5sm1eVcPuPwybuvwTGf69jY4PfF6m"],"license":"MIT"}},"version":1},"id":43}